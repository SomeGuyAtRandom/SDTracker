@model BusinessLayer.Models.UserPassword
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>
    @Html.ValueFor(model => model.UserName) Change Password

</h1>

<div class="container container-fluid">
    <form class="form-inline" role="form">

        @using (Html.BeginForm())
        {
            @Html.HiddenFor(model => model.UserName)
            @Html.HiddenFor(model => model.Email)

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>

                <div class="page-header" style="padding:10px">
                    <h1>
                        Change Password
                    </h1>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            
                            <div class="editor-label">
                                @Html.LabelFor(model => model.OriginalPassword)
                            </div>
                            <div class="editor-field">
                                @Html.PasswordFor(model => model.OriginalPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.OriginalPassword)
                            </div>
                            <div class="editor-label">
                                <label id="OriginalPassword">

                                </label>
                            </div>


                            <div class="editor-label">
                                @Html.LabelFor(model => model.Password)
                            </div>
                            <div class="editor-field">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                            <div class="editor-label">
                                <label id="PasswordCheck">

                                </label>
                            </div>


                            <div class="editor-label">
                                @Html.LabelFor(model => model.ConfirmPassword)
                            </div>
                            <div class="editor-field">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword)
                            </div>
                            <div class="editor-label">
                                <label id="ConfirmPasswordCheck">

                                </label>
                            </div>

                        </div>

                        <div class="editor-label">
                            <input formmethod="post" type="submit" disabled="disabled" value="Next" />
                        </div>

                    </div>
                </div>
            </fieldset>
        }

    </form>
</div>
<script type="text/javascript">

    function isEmpty(str) {
        return (!str || 0 === str.length);
    }

 
    function PasswordClientValidation(DoSetMessage)
    {
        if (DoSetMessage) { $('#Password').css('background-color', 'yellow'); }
        var sVal = $('#Password').val();

        if (sVal.length < 8) {
            if (DoSetMessage) { $('#PasswordCheck').text('Passwrord must be greater than 8 chatcers'); }
            return false;
        }

        if (sVal.length > 10) {
            if (DoSetMessage) { $('#PasswordCheck').text('Password cannot be greater than 10 chatcers'); }
            return false;
        }


        var captialLetterRegex = /^(?=.*[A-Z])/
        //var captialLetterRegex = new RegExp('^([A-Z]+)$');
        if (!captialLetterRegex.test(sVal)) {
            if (DoSetMessage) { $('#PasswordCheck').text('Password must have at least one Uppercase letter'); }
            return false;
        }

        var numbersRegex = /^(?=.*[0-9])/
        if (!numbersRegex.test(sVal)) {
            if (DoSetMessage) { $('#PasswordCheck').text('Password must have at least one numeric digit.'); }
            return false;
        }

        var whitespaceRegex = /^(?=.*[\s])/
        if (whitespaceRegex.test(sVal)) {
            if (DoSetMessage) { $('#PasswordCheck').text('Password cannot have any white space.'); }
            return false;
        }


        //var specialcharatersRegex = /^(?=.*[\u0021-\u002b])/
        ////var specialcharatersRegex = new RegExp('[\u0021-\u002b]+');
        //if (!specialcharatersRegex.test(sVal)) {
        //    if (DoSetMessage) { $('#PasswordCheck').text('At least one special chacter"'); }
        //    return false;
        //}

        if (DoSetMessage) { $('#PasswordCheck').text(''); }
        return true;
    }

    function ConfirmPasswordClientValidation(DoSetMessage) {

        if (DoSetMessage) { $('#ConfirmPassword').css('background-color', 'yellow'); }

        var sPassword = $('#ConfirmPassword').val();
        var sConfirmPassword = $('#ConfirmPassword').val();
        if (sPassword != sConfirmPassword) {
            if (DoSetMessage) { $('#ConfirmPassword').text('The password and confirmation password do not match.'); }
            return false;
        }

        if (DoSetMessage) { $('#ConfirmPassword').text(""); }
        return true;
    }


    function FormIsValid()
    {
        var bReturn = PasswordClientValidation(false) && ConfirmPasswordClientValidation(false);
        if (bReturn) { $('input[type="submit"]').removeAttr('disabled'); }
        return bReturn;
    }
    $(document).ready(function () {

        $('input[type="submit"]').attr('disabled', 'disabled');


        $('#Password').keyup(function (e) {
            PasswordClientValidation(true);
        });

        $('#ConfirmPassword').keyup(function (e) {
            $('#ConfirmPassword').css('background-color', 'yellow');
            ConfirmPasswordClientValidation();
        });
        
        $('#Password').blur(function (e) {
            if (FormIsValid() || PasswordClientValidation(true)) {
                $('#Password').css("background-color", "white");
            } else {
                $('#Password').css("background-color", "pink");
            }
        });

        $('#ConfirmPassword').blur(function (e) {
            if (FormIsValid() || ConfirmPasswordClientValidation(true)) {
                $('#ConfirmPassword').css("background-color", "white");
            } else {
                $('#ConfirmPassword').css("background-color", "pink");
            }
        });

    });



</script>


